::Q1::Which of the following storage classes is not used in modern C programs?
{
=register
~automatic
~extern
~static
}

::Q2::Which methods in the Python list() object provide stack-like functionality?
{
=append / pop
~push / pop
~enqueue / dequeue
~enqueue / pop
}

::Q3::Which of the following storage types are allocated in the stack frame
when a function is entered?
{
=automatic
~extern
~static
~common
}

::Q4::What is the Celsius equivalent of 68F?
{
=20
~22
~68
~40
~273
}

::Q5::Why can a function change the contents of an array of characters even though
the array is passed into the function "by value".
{
=Because the location of the array data is passed into the function
~Because the function can access the methods in the array object
~Because C copies the array contents back to the main program when the function returns
~Because the virtual memory map in Intel x86 processors allows two addresses to map to the same memory location.
}

::Q6::What is the best definition of "recursion"?
{
=See recursion
~Looping and callbacks
~First class functions
~Refactoring best practice
}

::Q7::In modern C, what does it mean when the type of a function is 'void'?
{
=The function does not return a value
~The function return value must be explicitly converted to an int
~The function returns an address and not a value
~The function body is empty and will be defined after the program starts
}

::Q8::In the 1978 C dialect, what is the default return type for a function?
{
=int
~void
~null
~str
~list
}

::Q9::What is the scope of a extern variable?
{
~The block in which it is defined
~The function in which it is defined
~The file in which it is defined
=The application in which it is defined.
}

::Q10::What is the scope of an automatic variable?
{
=The block in which it is defined
~The function in which it is defined
~The file in which it is defined
~The application in which it is defined.
}

::Q11::What is the scope of a function parameter variable?
{
~The block in which it is defined
=The function in which it is defined
~The file in which it is defined
~The application in which it is defined.
}

::Q12::What is the scope of a static variable?
{
~The block in which it is defined
~The function in which it is defined
=The file in which it is defined
~The application in which it is defined.
}

::Q13::Which of the following web site names is inspired by the situation when
a recursive function mistakenly calls itself an infinite number of times?
{
=Stack Overflow
~Medium
~linkedIn
~Twitter
~W3 Schools
}

::Q14::What is the best data structure to use when implementing a reverse polish
calculator.
{
=Stack
~Hash table
~Linked List
~FIFO Queue
}

::Q15::What is the element of the C runtime environment that makes recursive function
calls possible?
{
=Stack
~Heap
~Garbage Collection
~Global Interepreter Lock (GIL) 
}

::Q16::Which of these computations is a poor use of recursion?
{
=Computing the factorial of a number 
~Parsing mathematical expressions with numbers, operators, and parenthesis
~Traversing tree-like structures 
}

::Q17::Which of these problems is *not* an example of a problem we solve using C Pre-processor directives?
{
=Checking the syntax of C code before compiling
~Dealing with extensions which differ from one C compiler to another
~Generating different code for different variants of the C language
~Matching our C code to different library support in different operating systems
}

::Q18::(challenge question) Why does the 'lint' tool exist?
{
=In order to keep the c-compiler small and fast
=To scan code to make sure that variable types match between function calls and the functions definitions
=To allow the compiler to run using less memory
=To check for possible logic errors in the code
~To insure that small bits of 'cruft' are removed from clothing
}

::Q19::What is the output of the C pre-processor?
{
=C Source Code
~Assembly language
~Machine code
~Pre-optimization intermediate code
}

::Q20::Which of the following commands are handled by the C pre-processor?
{
=\#ifdef
~break
~continue
~\#while
~elif :
}

